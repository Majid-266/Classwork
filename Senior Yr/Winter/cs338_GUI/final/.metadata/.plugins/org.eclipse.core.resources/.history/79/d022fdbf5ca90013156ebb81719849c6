package drugiee;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import org.jsoup.Jsoup;

public class DataLoader {

	private JSONObject drugs_json, drug_brands_json, drug_interaction_json;

	public DataLoader() {
		loadData();
	}

	public void loadData() {
		try {
			// Load in drugs json
			BufferedReader in = new BufferedReader(new FileReader("Data_files/drugs.json"));

			String line, data = "";

			while ((line = in.readLine()) != null) {
				data = data + line;
			}
			in.close();

			// Begin parsing the json Drugs
			drugs_json = new JSONObject(data);

			// Load in drug brands json
			in = new BufferedReader(new FileReader("Data_files/drug_brands.json"));
			line = "";
			data = "";

			while ((line = in.readLine()) != null) {
				data = data + line;
			}
			in.close();

			// Begin parsing the json drug brands
			drug_brands_json = new JSONObject(data);

			// Begin loading in json Drugs information
			in = new BufferedReader(new FileReader("Data_files/drug_interactions.json"));
			line = "";
			data = "";

			while ((line = in.readLine()) != null) {
				data = data + line;
			}
			in.close();
			// Begin parsing the json Drugs information
			drug_interaction_json = new JSONObject(data);

			// Load in drugs json
			in = new BufferedReader(new FileReader("Data_files/patient_info.json"));

			line = "";
			data = "";

			while ((line = in.readLine()) != null) {
				data = data + line;
			}
			in.close();

			// Begin parsing the json Drugs
			patient_info = new JSONObject(data);

		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (JSONException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public JSONObject getBrandName(String drugName) {
		drugName = Jsoup.parse(drugName).text();
		try {
			JSONArray drug_brands = drug_brands_json
					.getJSONArray("drug_brands");
			for (int i = 0; i < drug_brands.length(); i++) {
				if (drug_brands.getJSONObject(i).getString("brand_name")
						.contains(drugName)) {
					return drug_brands.getJSONObject(i);
				}
			}
		} catch (JSONException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return null;
	}

	public JSONObject getDrug(String drugName) {
		drugName = Jsoup.parse(drugName).text();
		try {
			JSONArray drugs_array = drugs_json.getJSONArray("drugs");
			for (int i = 0; i < drugs_array.length(); i++) {
				if (drugs_array.getJSONObject(i).getString("name")
						.contains(drugName)) {
					return drugs_array.getJSONObject(i);
				}
			}
		} catch (JSONException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return null;
	}

	public String getDrugInformation(String drug_id) {
		if (drug_id == null)
			return null;

		String formattedInfo = "";
		try {
			JSONArray drugs_array = drugs_json.getJSONArray("drugs");
			for (int i = 0; i < drugs_array.length(); i++) {
				if (drugs_array.getJSONObject(i).getString("drug_id")
						.equals(drug_id)) {
					String description, pharmacology, indication;
					description = drugs_array.getJSONObject(i).getString(
							"description");
					pharmacology = drugs_array.getJSONObject(i).getString(
							"pharmacology");
					indication = drugs_array.getJSONObject(i).getString(
							"indication");

					formattedInfo = "<html><h2>Description</h2><p>"
							+ description + "</p>"
							+ "<br><h2>Pharmacology</h2><p>" + pharmacology
							+ "</p>" + "<br><h2>Indication</h2><p>"
							+ indication + "</p></html>";

					return formattedInfo;
				}
			}
		} catch (JSONException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return null;
	}
}
