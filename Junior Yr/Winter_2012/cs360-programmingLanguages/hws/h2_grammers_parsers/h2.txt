Sunny Patel
CS360 - Grammers, Parsing

1. It is ambiguous, because you can great two different parse trees on the same string. 
	For example parsing i 5 x y. You can get two completely parse trees.
	<sl> -> <sl> <s> 
			-> <s> <s>
			-> i <b> <s> <s>
			-> i 5 x y

	OR
	<sl> -> <s>
			 -> i <B> <S> e <S>
			 -> i 5 x y	


2. 
For an LL(1) parser when the lookahead is set to {a} the parser will try to
predict which will be the correct production.  It can screw up by picking
the wrong production at 
 <A> -> a <B>
 <A> -> a b <C>
here if lookahead is {a} then it'll think that the first rule is correct and
then look at <B> -> but we see that rule 2 could also be a possibility
because that also starts with a. With how it is setup now string abdxy will
never match.

Changing <A> rules to
 <A> -> a ( <B> | b <C> )
should solve this problem


3.
  a.  An LL parser would run into an infinate loop trying to expand the <A> in
<A> -> <A> a <B>.

  b.  <A> -> <B><A'> | <B>
			<A'>-> a <B> <A'> | e
			<B> -> <C> <B'>	| <C>
			<B'>-> <C> <B'>	| e
			<C> -> d | e

	c.  <A> -> <B> { a <B> }
			<B> -> <C> { <C> }
			<C> -> d | e
			
