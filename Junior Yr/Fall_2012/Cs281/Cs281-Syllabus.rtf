{\rtf1\ansi\deff0{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\colortbl ;\red0\green0\blue255;}
{\*\generator Msftedit 5.41.21.2509;}\viewkind4\uc1\pard\sa200\sl276\slmult1\lang9\f0\fs22 CS281 System Architecture Syllabus\par
Term and Credits\par
4 Lecture, 0 Lab, 4 Total\par
Instructor(s)\par
Section 001: Jeremy Johnson (jjohnson@cs.drexel.edu)\par
Office Hours: M 4-5pm, R 4-5:30 pm in UC 139\par
Teaching Assistant(s)\par
Tom Burdak (tb482)\par
Office Hours: W 1-3pm in UC 147\par
Course Description\par
\par
This course covers internal function and organization of digital computers, including instruction set design, machine and assembly language, computer arithmetic, ALU design, central processor organization and implementation.\par
Course Objective and Goals\par
\par
To obtain an understanding of how a computer is organized and how it works. To develop a model of how a program executes on a computer.\par
To be able to understand an assembly language program. There will be some assignments involving assembly language programming; however, the objective is to understand the instruction set of a machine and how a program executes on a computer, rather than to be able to write full length assembly language programs.\par
To understand how a computer can be implemented (down to the gate level). In the lab associated with the course, students will implement a subset of the MIPS architecture using the hardware definition language VHDL.\par
Audience and Purpose within Plan of Study\par
\par
This is a core computer science course required by all Computer Science majors. It is the first part of a two term sequence; the second course (CS282) is a track foundation elective. It should be taken in the 3rd year. The course is also required for the computer science minor.\par
Prerequisites \par
ECE 200 or ECE-C 211 Recommended, CS270, CS172 or SE103\par
What Students Should Know Prior to this Course\par
\par
Should be familiar with Boolean expressions, truth tables, normal forms.\par
Should be able to design a simple logic circuit.\par
Should be familiar with basic components of combinational logic: encoders, decoders, and multiplexors.\par
Should be familiar with elements of sequential logic: latches, flip flops, registers, memory.\par
Should be able to understand and design a finite state machine.\par
Solid programming experience.\par
Must be comfortable with the basic programming constructs in C/C++.\par
Must be comfortable with recursion and pointers.\par
Knowledge and the ability to use data structures such as arrays and lists.\par
What Students will be able to do upon Successfully Completing this Course: Statement of Expected Learning\par
\par
Understand what a compiler, interpreter, assembler, linker and loader does.\par
Understand the components and format of a machine instruction set.\par
Be able to write a simple assembly language program.\par
To be able to understand how an assembly language program executes on a computer.\par
To understand how a computer represents numbers and performs arithmetic.\par
To build a simple ALU.\par
To understand the datapath and control of a simple computer.\par
To implement a simple instruction set: create an appropriate datapath and describe the control using microcode or a finite state machine.\par
To describe and simulate a processor using a hardware definition language.\par
Textbook\par
\par
David A. Patterson and John L. Hennessy. Computer Organization and Design: The Hardware/Software Interface - FOURTH EDITION REVISED (green and yellow cover). Morgan Kaufman/Elsevier: 9780123747501\par
Recommended: Randel Bryant and David O'Hallaron. Computer Systems: A Programmer's Perspective. Prentice Hall: 013034074X\par
Recommended: Pedroni. Circuit Design with VHDL. Triliteral: 9780262162241\par
Recommended: Pong P. Chu. FPGA Prototyping by VHDL Examples: Xilinx Spartan-3 Version. John Wiley and Sons: 0470185317\par
Grading and Policies\par
\par
Written Assignments (~three) 15% (~5% each)\par
Programming Assignments (~two) 10% (~5% each)\par
Labs (~four) 10% (~2% each)\par
Midterm Exam 15%\par
Final Exam and Quizzes 25%\par
Project (~three) 25% (~8% each)\par
Course citizenship will augment these grades via the +/- system by up to one letter grade.\par
\par
Final grades will be determined by your total points weighted according to this distribution. Grades may be curved but are generally computed via the formula below. It may be modified at the instructor's sole discretion, but letter grades will generally not be lower than those shown here.\par
\par
A range (A+, A, A-) is a course average [90, 100)\par
B range is a course average [80, 90)\par
C range is a course average [70, 80)\par
D and F range is a course average [0, 70)\par
The university's Academic Honesty policy is in effect for this course. Please read Drexel University Student Handbook found at  {\field{\*\fldinst{HYPERLINK "http://www.drexel.edu/Studentlife/"}}{\fldrslt{\ul\cf1 http://www.drexel.edu/Studentlife/}}}\f0\fs22 . On the first incident, students who share their work (even with best intentions) or otherwise violate the course or university academic honesty policy may receive a grade of F for the course (the students may not withdraw in this case). The students may be reported to the department, college, and/or University Judicial (Honesty) Board. Both the giver and the receiver will receive these penalties.\par
\par
Submitting Assignments\par
\par
Assignments will be submitted according to the directions given on the assignment page, no later than 11:59PM on the day listed on each assignment, the assignment page, and/or the submission system (i.e. WebCT or Submit).  Grade breakdowns, rubrics, and/or point valuations will be provided on each assignment as it is assigned, as appropriate.  Grades will be reported via the directions provided on the assignment page (i.e., WebCT and/or email).\par
Labs, and assignments, and exams will be returned on a regular basis to provide feedback to students.\par
\par
Topics\par
\par
Computer Abstractions (Chapter 1)\par
Review of Digital Circuits and Logic Design (Appendix C)\par
History of Computers (Chapter 1)\par
Instructions: Language of the Machine (Chapter 2)\par
Assembly Language Programming (Chapter 2 and Appendix B)\par
Assemblers, Linkers, and the SPIM Simulator (Appendix B)\par
Computer Arithmetic (Chapter 3)\par
The Processor: Datapath and Control (Chapter 4 and Appendix E)\par
VHDL and hardware simulation (VHDL/FPGA Text)\par
Tentative Course Schedule\par
\par
Please see the appropriate assignment, lab, and/or project webpages for a tentative schedule of course deliverables.\par
Week #\tab Dates\tab Lecture Topics\tab Labs, Readings and Whitepapers\tab Notes\par
1\tab Week of September 24, 2012\tab Course Introduction and Random Access Machines\tab\tab\par
1\tab Week of September 24, 2012\tab Implementation of a Simple Computer\tab\tab\par
2\tab Week of October 1, 2012\tab Behind a Program and Under the Hood\tab CoD Chapter 1\tab\par
2\tab Week of October 1, 2012\tab Introduction to the MIPS Instruction Set\tab CoD Chapter 2\tab\par
2\tab Week of October 1, 2012\tab Branching and Procedures\tab\tab\par
3\tab Week of October 8, 2012\tab Recorded lecture on procedures, recursion and arrays\tab\tab\par
3\tab Week of October 8, 2012\tab Recursive Functions, Arrays and Strings\tab\tab\par
3\tab Week of October 8, 2012\tab Arrays, Pointers, and Linked Lists\tab\tab\par
4\tab Week of October 15, 2012\tab Review of Digital Circuits and Logic Design\tab\tab\par
5\tab Week of October 22, 2012\tab VHDL Tutorial\tab VHDL/FPGA Text\tab See VHDL Lab\par
5\tab Week of October 22, 2012\tab Introduction to Computer Arithmetic\tab CoD Chapter 3\par
CSAPP Chapter 2\tab\par
5\tab Week of October 22, 2012\tab Design of the ALU\tab\tab\par
5\tab Week of October 22, 2012\tab Midterm Exam\tab\tab Take Home Exam\par
6\tab Week of October 29, 2012\tab A Simple Implementation of MIPS\tab CoD Chapter 4\tab\par
7\tab Week of November 5, 2012\tab Multicycle Implementation of MIPS\tab\tab\par
8\tab Week of November 12, 2012\tab Integer Multiplication and Division\tab CoD Chapter 3\tab\par
9\tab Week of November 19, 2012\tab Floating Point Arithmetic\tab\tab What Every Computer Scientist Should Know about Floating Point (requires a campus IP address or VPN connection)\par
10\tab Week of November 26, 2012\tab Final Exam Review\tab\tab\par
11\tab Week of December 3, 2012\tab Final Exam on TBA at TBA in Room TBA\tab\tab Final Exam\par
Holidays\par
\par
Please note the following holidays. If we have class normally scheduled on these days, we will not meet.\par
10/8/2012\par
University Policies\par
\par
In addition to the course policies listed on this syllabus, course assignments or course website, the following University policies are in effect:\par
Academic Honesty: {\field{\*\fldinst{HYPERLINK "http://www.drexel.edu/provost/policies/academic_dishonesty.asp"}}{\fldrslt{\ul\cf1 http://www.drexel.edu/provost/policies/academic_dishonesty.asp}}}\f0\fs22\par
Student Life Honesty Policy from Judicial Affairs: {\field{\*\fldinst{HYPERLINK "http://www.drexel.edu/studentlife/judicial/honesty.html"}}{\fldrslt{\ul\cf1 http://www.drexel.edu/studentlife/judicial/honesty.html}}}\f0\fs22\par
Students with Disability Statement: {\field{\*\fldinst{HYPERLINK "http://www.drexel.edu/ods/student_reg.html"}}{\fldrslt{\ul\cf1 http://www.drexel.edu/ods/student_reg.html}}}\f0\fs22\par
Course Drop Policy: {\field{\*\fldinst{HYPERLINK "http://www.drexel.edu/provost/policies/course_drop.asp"}}{\fldrslt{\ul\cf1 http://www.drexel.edu/provost/policies/course_drop.asp}}}\f0\fs22\par
The instructor may, at his/her/their discretion, change any part of the course during the term, including assignments, grade brakdowns, due-dates, and the schedule. Such changes will be communicated to students via the course web site Announcements page. This page should be checked regularly and frequently for such changes and announcements. Other announcements, although rare, may include class cancellations and other urgent announcements.\par
Drexel Student Learning Priorities: {\field{\*\fldinst{HYPERLINK "http://www.drexel.edu/provost/dcae/SymposiumLearningPriorities.PDF"}}{\fldrslt{\ul\cf1 http://www.drexel.edu/provost/dcae/SymposiumLearningPriorities.PDF}}}\f0\fs22\par
Expectations of Student Conduct\par
\par
Other course expectations for behavior and interaction in the course can be found on the Course Guidelines page of the course web site.\par
}
 